<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcqutmHqvt7B+r7f8frO7/Hqvt/x6s7v8dq+3/HKrt/xuq
        7f8bqu3/Gqns/xmo7P8YqOz/GKns/xeo7P8WqOz/Fqjr/xWo6/8VqOv/Fqfr/xan6/8Vp+v/Fqfs/xWn
        6/8WqOv/Fqjs/xeo7P8Yqez/Gajs/xmp7P8aqez/G6rt/xyq7P8dq+3/Hazt/x6r7f8fq+3/H6zu/x+r
        7f8erO7/HKrt7Bmr62cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhre7rI63v/ySu7/8lr+//JK7v/yWv
        7/8lr+//JK7v/yOu7/8jru//Iq3v/yKt7/8hrO//IKzu/x+s7v8fre7/H6zu/x6s7f8erO3/Hqzt/x2s
        7f8erO3/Hqzt/x+s7f8fre3/H63u/x+s7f8gre3/Iazu/yKt7/8ire//I67v/ySu7/8krvD/Ja/w/yWv
        8P8lr+//JK7v/ySu7/8iru7/IKzt/xyr6+oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjre/qJq/v/yiw
        8P8psfD/KrHx/yqy8f8qsvH/KrLy/yqy8f8qsvH/KbLy/yiy8v8osfH/J7Dw/yaw8P8msPD/JrDw/yaw
        8P8lsfH/JbDv/yWx8f8lsO//JbDw/yWw8P8msPD/JrDw/yax8P8nsPH/KLHx/yix8v8qsPH/KrHx/yqx
        8v8qsvH/KrLy/yqy8f8psPD/KLDw/yev7/8kru7/Ia3u/xyr7OoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAmru+UKa/v/yuw8P8tsvH/LrPy/y+z8v8vtPP/L7Ty/zC08v8vtPL/L7Py/y6z8v8vsvP/LrPy/y2z
        8v8tsvL/LLHy/yyz8v8ssvL/LLLy/yyz8/8ssvH/LLLy/yyy8v8ssvL/LLLy/y6z8v8us/L/LrLx/y6z
        8v8vs/L/L7Tz/zC08v8ws/L/L7Tz/y608v8us/H/LLHx/yqw8P8mr+//Iqzu/yCs7pYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAktv8HKbHw5Cyy8f8us/H/MLXy/zK18v8ytvT/NLb0/zO29P80t/T/M7b0/zO2
        9P8ztvT/Mrb0/zK18/8xtvT/Mbbz/zG18/8wtfT/MLXz/zC08/8wtPP/MLTz/zG18/8wtfP/MbXz/zK1
        8/8ztvT/MrXz/zO18/80tfT/NLf0/zO39P80tvP/M7Xz/zK18v8wtfL/LrPx/yqx8P8nru7/Ia3s6DnG
        4wkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK7LvYC2x8P8wtfH/MrXy/zS28/81t/P/Nrf0/ze4
        9P83uPP/N7j0/ze39P82uPT/Nrj0/za49P81t/T/NLf0/zW49P81t/T/MI24/yQyOf8kMzr/MI66/za3
        9P81t/T/Nbf0/za49P82t/P/Nrn0/ze39P83uPT/N7j0/ze49P82uPT/Nbf0/zS28/8ytfH/L7Pw/yux
        8P8lre3/J6/waQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6z8cwwtPH/M7bz/ze4
        9P84uPP/Obn0/zq58/86ufX/Orr1/zu59f86uvX/Orr1/zm79P85uvX/Obn0/zm59P85ufX/JjQ7/yQk
        JP8kJCT/JjU8/zm59f85ufT/Obn0/zq79f86ufb/Orv2/zu59f86ufX/O7n1/zq69f85ufP/OLn0/za3
        9P8ztfH/L7Tx/yqx7/8msO/OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADG1
        8DQws/D7M7by/zi48/86uPT/O7r1/zy59P89ufX/Prr1/z279v8+u/X/Prv1/z669f89u/X/Pbr1/z27
        9v88uvX/KTY9/yYmJv8mJib/KTc+/z279v89u/b/Pbv2/z269f8+u/X/Prv2/z269v8+uvX/Pbr1/zy5
        9f88ufT/Orjz/ze28v80tfL/L7Lw/ymw7fwosPI6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAytPGpNLXy/zi38v87ufT/Pbr1/z679f8/u/b/QLv1/0G+9/9Bvfb/QLz2/0G9
        9/9Avfb/QLz3/0C89/9Avff/OZG6/ys4Pv8rOT//OZG7/0C9+P9Bvvf/QL32/0G99/9Avff/Qb33/0G8
        9f9AvPX/QLv2/z679v89ufX/Ornz/zi38v8ztfH/LbLw/yuy7awAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzv/8UNLXx8Di38f88ufP/Prr0/0G79v9CvPb/Qr32/0O+
        9v9Dvff/RL73/0W+9/9Dvvf/RL/3/0O99/9Dvff/Q733/0O+9/9Dvvf/Q733/0S++P9Evvj/Q733/0S9
        9v9Evff/Q773/0O99v9Cvfb/Qrz2/0G79f8+ufT/O7nz/zi28f8ytPD/LbLv8je89BcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANbbzgTe28f89ufT/P7r0/0K8
        9f9EvfX/Rb72/0W/9/9Gv/f/Rr/4/0e/+P9HwPf/SMD3/0i+9/9HwPj/R7/3/0jA9/9IwPf/R8D4/0fA
        9/9Iv/f/R8D3/0e/9/9Hv/j/Rr/3/0a/9/9Fvvb/RL31/0K79f8/uvX/O7fy/ze28f8wsvD/MbPxgwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVar/Aze1
        8d08uPH/P7n0/0O79f9FvfT/R772/0i/9/9Jv/f/S8D4/0nA9/9KwPf/SsD3/0vB+P9LwPf/Sr/2/zVP
        W/81T1v/S771/0vB+P9Kv/f/S8H3/0vA+P9KwPf/SsD3/0i/9v9Hvvb/Rb32/0O79f9AuvT/PLjz/za0
        8P8xsu/hM5n/BQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAD258lA7uPH+P7nz/0S99P9Gvvb/Sb72/0rA9/9LwPj/TcH4/07B9/9Owvf/TcL4/07B
        +P9Owfj/SrPi/zAwMP8wMDD/S7Lj/07C+f9Nwvj/TsH4/03B+P9NwPf/TMD3/0rA+P9Jv/f/SL/2/0S8
        9P9AuvT/O7fz/zS07/81tvBXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7ufLBPrny/0O89f9Hv/b/Sr/3/0zB9/9Owff/TsL5/1DD
        +P9Rw/j/UcT5/1HD+f9RxPn/S6jU/zIyMv8yMjL/S6rV/1LE+f9RxPn/UML4/1DD+P9Qw/n/TsL4/0zC
        +P9Kv/f/SL/2/0S89P9AuvP/Obbx/za28cMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGufIoPbjx+UO88/9HvvX/S7/2/07A
        +P9Qw/j/UcL3/1LD+f9UxPn/VMT5/1TE+f9UxPr/TJ/H/zQ0NP80NDT/TaHI/1XF+f9UxPn/VMT5/1LD
        +P9Sw/j/UcL4/07B+P9LwPf/SL/2/0S89P8+ufL/N7bw+je37i4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP7jynkG5
        8v9GvfT/S7/1/07C9/9Rwvj/UsP3/1TE+P9Vxfj/VsX5/1fF+v9Xxvn/TZe6/zc3N/83Nzf/TJi7/1fF
        +f9Xxfn/VsX5/1TE+P9Uw/f/UsL4/0/B9/9Mv/b/SL30/0K68v87t/L/ObTxoAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATsT/DUC78+tFu/P/S7/2/0/B+P9Rw/f/U8P4/1XF+f9Xxfn/WMb6/1jG+v9Zxvn/TY+u/zk5
        Of85OTn/TJCu/1jG+v9Zx/r/V8f6/1fF+f9Uxfj/U8P4/1DC9/9LwPf/R730/0C58v87tvHuPMP/EQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAES78nVEu/L/Sb70/07A9v9Twvf/VcX4/1fF+P9Zxvn/Wsb5/1zI
        +v9bx/r/TYag/zs7O/87Ozv/Toah/1zI+v9bx/r/Wsb5/1nF+f9WxPj/VMP3/1DC9/9Mv/X/Rbvz/z64
        8P8/uPJ2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wJEu/LWSL30/02/9f9Twfb/VcT3/1nF
        +P9axfj/W8b4/13G+f9ex/n/TX6U/z09Pf89PT3/TX6W/17I+v9dx/n/XMf5/1nG+P9XxPj/VcT4/1DA
        9v9LvvX/RLry/z638dsA//8CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKvPBFRbzz/ky+
        9P9RwfX/VsP4/1jF+P9cx/n/Xcf5/1/I+v9gyfv/THWI/z8/P/8/Pz//THaJ/1/J+v9ex/r/Xcf6/1vF
        +f9Yxfj/U8L2/0+/9P9IvfT/QLnx/ka88kwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABQwvSPTb7y/1bC9P9cxfb/YMj4/2LJ+P9jyPj/Ysn4/1/H9/9axfb/VML0/1C/
        9I8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAz//8FTL3y5VLB9P9ZxPT/Xcb2/2DI+P9hyPf/YMj4/17H
        9/9YxPX/UcH150C//wgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVMP0YU2+8f9VwvP/W8T1/17G
        9v9gx/b/X8b2/1vE9f9VwvT/VMH1ZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEy8
        8M9QwPL/VsP0/1vF9f9dxvb/XMX1/1nE9v9TwfTOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAE279jhLvPH7UsDz/1fD9P9ZxPT/WMP1/1XC9PxVxPc8AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMvfGxTr7y/1PB9P9WwfT/VsL1/1G+8rEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVyvQYSbzw8k++8v9TwPT/UMDy8lXK
        9BgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATbvzU0i7
        8d5MvPLeS7vzUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AADgAAAAAAcAAOAAAAAABwAA4AAAAAAHAADgAAAAAAcAAOAA
        AAAABwAA8AAAAAAPAAD4AAAAAB8AAPgAAAAAHwAA/AAAAAA/AAD8AAAAAD8AAP4AAAAAfwAA/gAAAAB/
        AAD/AAAAAP8AAP+AAAAB/wAA/4AAAAH/AAD/wAAAA/8AAP/AAAAD/wAA/+AAAAf/AAD/4AAAB/8AAP/w
        AAAP/wAA//gAAB//AAD/+AAAH/8AAP/8AAA//wAA//wAAD//AAD//gAAf/8AAP//AAD//wAA//8AAP//
        AAD//4AB//8AAP//gAH//wAA///AA///AAD//8AD//8AAP//4Af//wAA///wD///AAD///AP//8AAP//
        +B///wAA///4H///AAD///w///8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>